{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControl.css","components/UI/Button/Button.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","hoc/Layout/Layout.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","withRouter","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","console","log","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","onInitIngredients","sum","disabledInfo","ings","orderSummary","burger","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","loading","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","App","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33d28fad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"HuxZPfsTQk6kf8ScsD35c\",\"BreadTop\":\"_10-cTAWgqIPt0kctF6Bmth\",\"Seeds1\":\"_3xHtzMBSXqXFtyL2Kkf3Gu\",\"Seeds2\":\"_1cUso01mEhPiOvVew6u076\",\"Meat\":\"_13nANrA0F7BA6yWg1cuxyQ\",\"Cheese\":\"_1FxeY1KKtrGNpRoQOfCofJ\",\"Salad\":\"_1iTJEGGLnCbWNIyCGWETEe\",\"Bacon\":\"_3vrAI2Ovef69xUC2be2Tib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"_21TuB0Dn6JJ4uEYkpf9Fnt\",\"Open\":\"_1pVYRaiLBtOhv7pDNimBtN\",\"Close\":\"_3Yv1lLM58kyRaR73W22KWZ\",\"Logo\":\"_3TkPvMPv1WUzP1NgAUT6zE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"_1jYc3QBtl-VmgIWdCI3dgO\",\"Label\":\"_33Z-plxrqIneM7Mz2ytOp0\",\"Less\":\"_377MJOSYo2UYjMj1U14k03\",\"More\":\"_28-hQFZzubxjJbKbVayD5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"s67N0w35nKdhFxX_3zncw\",\"Label\":\"_n-1my-7YxR9EuzWR3hhB\",\"InputElement\":\"_2-aFxd6_SUnHTHpTf8dvYS\",\"Invalid\":\"_1sl1p7M77V1I9nxTQviKpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"_2JJW-ZloCsemWXc-SwluYI\",\"Logo\":\"_1efBDQJDXv28ttI2RtLXHD\",\"DesktopOnly\":\"WADUdqFzcPCSrUAJGFXrf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"_23bcunS9Qq8yRK8U15WWqn\",\"active\":\"_2zJdO1aspVrGyx-JgFjMYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"X_YP4lZ3SZb6EQzz2-Uld\",\"OrderButton\":\"_1vy8KMrRCWh0WnJIaMzo4l\",\"enable\":\"_2UgmCo3EXQhh8Y3zbfBQ1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"QI7b2B9HFdWRqXJlhx5ZF\",\"Success\":\"_2dHUtYmIiKVpRl3omZjpfb\",\"Danger\":\"_2xnhNuUUklZ_76EhvNOs5Q\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"_19WaN2tuJCY7yX7kGD_ZBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"_yd_dZzBcrRT8NyTlYD_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"_26to0rZE2eHfVYZs2qTwFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"efy1yH85jAELhES8l7b-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"_3pLYCt_XGv-qW86lAaB4Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"_3K4F-Qd9PP5cwDxK60_fC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"_32_-amvWF8w07UmzDeLfZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"_1DDwYTkbvNoVwBDs8ZptVg\",\"load2\":\"_1N7mgFPOaqyEMO5kgrH5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"_1xBm4j5hECL-q6sCIhiBB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"_1J81rlRO5zxuF98VMkEamZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"_4yi4ZpfqAgHINYViIZYP6\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.css';\n\nconst navigationItem = ( props ) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nimport classes from './Toolbar.css';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport Aux from '../Aux/Aux';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\nimport classes from './Layout.css';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({ showSideDrawer: false })\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        });\n    }\n\n    render() {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default Layout\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component {\n    render() {\n        let ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport classes from './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger  = (props) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n        if (transformedIngredients.length === 0) {\n            transformedIngredients = <p>Please start adding ingredients!</p>\n        }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default withRouter(burger);","import React from 'react';\n\nimport classes from './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControl.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad'},\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese'},\n    { label: 'Meat', type: 'meat'}\n]\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}/>\n        ))}\n        <button \n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;\n","import React, { Component } from 'react';\n\nimport classes from './Modal.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n    componentWillUpdate () {\n        console.log('[Modal] WillUpdate');\n    }\n    render() {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal;\n","import React from 'react';\n\nimport classes from './Button.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    // This could be a functional component, doesn't have to be a class\n    componentWillUpdate() {\n        console.log('[OrderSummary] WillUpdate');\n    }\n    render() {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n                .map(igKey => {\n                    return (\n                        <li key={igKey}>\n                            <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                        </li>\n                    )\n                });\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients: </p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux >\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://rect-my-burger-5790c.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport * as actions from '../../store/actions/index';\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        purchasing: false,\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState( { purchasing: true } );\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n    purchaseContinueHandler = () => {\n        // alert('You continue!');\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.props.ings ) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        price={this.props.price} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        // {salad: true, meat: false, ...}\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get( 'https://rect-my-burger-5790c.firebaseio.com/ingredients.json' )\n            .then( response => {\n                dispatch(setIngredients(response.data));\n            } )\n            .catch( error => {\n                dispatch(fetchIngredientsFailed());        \n            } );\n    };\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENTS';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n}\n\nexport const purchaseBurger = (orderData) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        axios.post('/orders.json', orderData)\n            .then(response => {\n                console.log(response.data);\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error));\n            });\n    };\n};\n\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = () => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(err => {\n                dispatch(fetchOrdersFail(err));\n            });\n    }\n};","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', height: '300px', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n        this.setState( { loading: true } );\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData\n        }\n\n        this.props.onOrderBurger(order);\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        } \n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n        if (rules.maxLength) {\n            isValid = value.length <= rules.minLength && isValid\n        }\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = { \n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.props.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n\n    render() {\n        let summary = <Redirect to=\"/\" />\n        if (this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData} />\n                </div>\n\n            );\n        }\n        return (\n            summary\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\n\nimport classes from './Order.css';\n\nconst order = (props) => {\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({ name: ingredientName, amount: props.ingredients[ingredientName] })\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px' \n            }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders();\n    }\n\n    render() {\n        let orders = <Spinner />;\n        if (!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ))\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: () => dispatch(actions.fetchOrders())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nfunction App() {\n  return (\n    <div >\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst addIngredient = ( state, action ) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    }\n    return updateObject( state, updatedState );\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    }\n    return updateObject( state, updatedSt );\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject( state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false\n    } );\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = ( state, action ) => {\n    return updateObject( state, { purchased: false } );\n};\n\nconst purchaseBurgerStart = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst purchaseBurgerSuccess = ( state, action ) => {\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\n    return updateObject( state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat( newOrder )\n    } );\n};\n\nconst purchaseBurgerFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchOrdersStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchOrdersSuccess = ( state, action ) => {\n    return updateObject( state, {\n        orders: action.orders,\n        loading: false\n    } );\n};\n\nconst fetchOrdersFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\n        default: return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n        applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}